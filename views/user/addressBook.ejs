<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Address Book</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f0f0f0;
      color: #333;
      margin: 0;
      padding: 20px;
    }
    h1 {
      text-align: center;
      color: #000;
      margin-bottom: 30px;
    }
    .address-book {
      max-width: 900px;
      margin: 0 auto;
      background-color: #fff;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }
    .address-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px;
      border-bottom: 1px solid #ddd;
    }
    .address-item:last-child {
      border-bottom: none;
    }
    .address-info {
      flex: 1;
      padding-right: 20px;
    }
    .address-info h3 {
      margin: 0 0 10px;
      font-weight: 500;
      color: #000;
    }
    .address-info p {
      margin: 0;
      color: #666;
    }
    .address-actions {
      display: flex;
      gap: 10px;
    }
    .btn {
      padding: 8px 12px;
      border: none;
      cursor: pointer;
      border-radius: 5px;
      font-size: 14px;
    }
    .btn-edit {
      background-color: #333;
      color: #fff;
    }
    .btn-delete {
      background-color: #e74c3c;
      color: #fff;
    }
    .btn-edit:hover, .btn-delete:hover {
      opacity: 0.8;
    }
  </style>
</head>
<body>
  <h1>Address Book</h1>

  <div class="address-book mb-5">
    <% addresses.forEach(function(address) { %>
      <div class="address-item" id="address-<%= address._id %>">
        <div class="address-info">
          <h3><%= address.fullName %></h3>
          <p><strong>Address:</strong> <%= address.streetAddress %>, <%= address.city %></p>
          <p><strong>Phone:</strong> <%= address.phoneNumber %></p>
          <p><strong>Email:</strong> <%= address.emailAddress %></p>
        </div>
        <div class="address-actions">
          <form action="/profile/edit-address/<%= address._id %>" method="GET">
            <button class="btn btn-edit">Update</button>
          </form>
          <form class="delete-form" action="/profile/delete-address/<%= address._id %>" method="POST">
            <button type="button" class="btn btn-delete">Delete</button>
          </form>
        </div>
      </div>
    <% }); %>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
  <script>
    document.querySelectorAll('.delete-form').forEach(form => {
      form.querySelector('.btn-delete').addEventListener('click', function(e) {
        e.preventDefault();
        const deleteUrl = form.action;
        const addressId = form.closest('.address-item').id;

        Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!',
          cancelButtonText: 'Cancel'
        }).then((result) => {
          if (result.isConfirmed) {
            // Using fetch to send a DELETE request
            fetch(deleteUrl, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              }
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                Swal.fire(
                  'Deleted!',
                  'The address has been deleted.',
                  'success'
                );
                // Remove the deleted address from the DOM
                document.getElementById(addressId).remove();
              } else {
                Swal.fire(
                  'Error!',
                  'There was a problem deleting the address.',
                  'error'
                );
              }
            })
            .catch(error => {
              console.log(error)
              Swal.fire(
                'Error!',
                'There was a problem deleting the address.',
                'error'
              );
            });
          }
        });
      });
    });
  </script>
</body>
</html>
