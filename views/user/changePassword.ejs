<form id="forgotForm">
    <div class="container" style="display: flex; justify-content: center; align-self: center;">
        <div class="forgot-password-container">
            <div width="200px" height="140px" style="align-items: center;">
                <h2>Reset your Password</h2>
                <div class="row form-group">
                    <div class="col-9">
                        <label for="password">Enter Your New Password</label>
                        <input type="password" style="font-size: 16px;" id="password" class="form-control" name="password">
                        <p id="password-error" class="text-danger" style="font-size: 14px;"></p>
                    </div>
                    <div class="col-9">
                        <label for="password">Re-Enter Your New Password</label>
                        <input type="password" style="font-size: 16px;" id="confirm_password" class="form-control" name="confirm_password">
                        <p id="confirm_password-error" class="text-danger" style="font-size: 14px;"></p>
                    </div>
                    <div class="col-3">
                        <button type="button" id="sendBtn" class="btn btn-primary fs-4 mt-5">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<!-- /hidden form -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const variantSection = document.getElementById('variants-section');
    const addVariantBtn = document.getElementById('add-variant-btn');
    const editProductForm = document.getElementById('edit-product-form');

    // Function to add a new variant dynamically
    function addVariant(index) {
        const variantRow = document.createElement('div');
        variantRow.className = 'row variant-row';
        variantRow.setAttribute('data-index', index);
        variantRow.innerHTML = `
            <div class="col-md-12">
                <h5 class="card-description">Variant ${index + 1}</h5>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <select class="form-select" name="storage_size[]" required>
                        <option value="">Storage Size</option>
                        <option value="32 GB">32 GB</option>
                        <option value="64 GB">64 GB</option>
                        <option value="128 GB">128 GB</option>
                        <option value="256 GB">256 GB</option>
                        <option value="512 GB">512 GB</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <select class="form-select" name="color[]" required>
                        <option value="">Color</option>
                        <option value="Red">Red</option>
                        <option value="Blue">Blue</option>
                        <option value="Black">Black</option>
                        <option value="Purple">Purple</option>
                        <option value="Green">Green</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <input type="number" class="form-control" placeholder="Price" name="price[]" required />
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <input type="number" class="form-control" placeholder="Stock" name="stock[]" required />
                </div>
            </div>
            <div class="col-md-12 text-end">
                <button type="button" class="btn btn-danger remove-variant-btn">Remove Variant</button>
            </div>
        `;
        variantSection.appendChild(variantRow);

        // Add event listener for the new "Remove Variant" button
        variantRow.querySelector('.remove-variant-btn').addEventListener('click', function () {
            variantRow.remove();
        });
    }

    // Add new variant when clicking the "Add Variant" button
    addVariantBtn.addEventListener('click', function () {
        const index = variantSection.children.length;
        addVariant(index);
    });

    // Handle remove variant buttons on existing variants
    document.querySelectorAll('.remove-variant-btn').forEach(button => {
        button.addEventListener('click', function () {
            button.closest('.variant-row').remove();
        });
    });

    // Handle form submission using AJAX
    editProductForm.addEventListener('submit', function (e) {
        e.preventDefault();
        const formData = new FormData();

        // Append all non-variant fields to formData
        const formElements = editProductForm.querySelectorAll('input[name], select[name], textarea[name]');
        formElements.forEach((element) => {
            if (element.name !== 'storage_size[]' && element.name !== 'color[]' && element.name !== 'price[]' && element.name !== 'stock[]') {
                formData.append(element.name, element.value);
            }
        });

        // Handle variant data appending correctly
        const variantRows = document.querySelectorAll('.variant-row');
        variantRows.forEach((row, index) => {
            const storageSize = row.querySelector('select[name="storage_size[]"]').value;
            const color = row.querySelector('select[name="color[]"]').value;
            const price = row.querySelector('input[name="price[]"]').value;
            const stock = row.querySelector('input[name="stock[]"]').value;

            formData.append(`variants[${index}][storage_size]`, storageSize);
            formData.append(`variants[${index}][color]`, color);
            formData.append(`variants[${index}][price]`, price);
            formData.append(`variants[${index}][stock]`, stock);
        });

        // Clear previous errors
        document.querySelectorAll('.text-danger').forEach((element) => {
            element.textContent = '';
        });

        // AJAX request to update product
        fetch('/admin/update_product', {
            method: 'POST',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Product updated successfully');
                window.location.href = '/products'; // Redirect after successful update
            } else {
                // Handle validation errors
                Object.keys(data.errors).forEach(key => {
                    document.getElementById(`${key}_error`).textContent = data.errors[key];
                });
            }
        })
        .catch(error => console.error('Error:', error));
    });
});


</script>