<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <style>
        body {
            background-color: #f1f3f5;
            font-family: Arial, sans-serif;
        }

        .otp-container {
            width: 100%;
            max-width: 450px;
            margin: 0 auto;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .otp-box {
            background-color: #ffffff;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 100%;
        }

        .otp-input {
            width: 60px;
            height: 60px;
            font-size: 2rem;
            border: 2px solid #ced4da;
            border-radius: 10px;
            margin: 0 10px;
            text-align: center;
        }

        .otp-input:focus {
            border-color: #000;
            outline: none;
        }

        .btn-dark {
            background-color: #000;
            color: #fff;
            border-radius: 10px;
            padding: 12px;
            font-size: 1rem;
            width: 100%;
            border: none;
            cursor: pointer;
        }

        .btn-link {
            background: none;
            border: none;
            color: #007bff;
            font-size: 1rem;
            cursor: pointer;
            padding: 0;
        }

        .btn-link:disabled {
            color: #6c757d;
            cursor: not-allowed;
        }

        .alert {
            display: none;
            padding: 15px;
            margin-bottom: 1rem;
            border-radius: 5px;
            font-size: 1rem;
            text-align: left;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        #timer {
            margin: 1.5rem 0;
            font-size: 1rem;
            color: #6c757d;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<body>

    <div class="otp-container">
        <div class="otp-box">
            <h2>Enter OTP</h2>
            <p class="text-muted">Please enter the four-digit code</p>

            <div id="timer">Time remaining: <span id="time">02:00</span></div>

            <div id="message" class="alert"></div>

            <form id="otpForm">
                <div class="d-flex justify-content-center mb-4">
                    <input type="text" class="otp-input" id="otp1" maxlength="1" oninput="moveToNext(this, 'otp2')"
                        required>
                    <input type="text" class="otp-input" id="otp2" maxlength="1" oninput="moveToNext(this, 'otp3')"
                        required>
                    <input type="text" class="otp-input" id="otp3" maxlength="1" oninput="moveToNext(this, 'otp4')"
                        required>
                    <input type="text" class="otp-input" id="otp4" maxlength="1" required>
                </div>
                <button type="submit" class="btn-dark">Verify OTP</button>
            </form>

            <form id="resendOTPForm" class="mt-3">
                <button type="submit" class="btn-link" id="resendOTPButton" disabled>Resend OTP</button>
            </form>
        </div>
    </div>

    <script>
       // Move to the next OTP input
function moveToNext(current, nextFieldID) {
    if (current.value.length === current.maxLength) {
        $("#" + nextFieldID).focus();
    }
}

// Move to the previous OTP input on backspace
function moveToPrev(current, prevFieldID) {
    if (current.value.length === 0) {
        $("#" + prevFieldID).focus();
    }
}

// Handle timer and OTP resend button
let timeLeft = 120; // 2 minutes
const timerElement = $("#time");
const resendButton = $("#resendOTPButton");
const verifyButton = $("#otpForm button[type='submit']");
let timerInterval;

function startTimer() {
    timerInterval = setInterval(() => {
        let minutes = Math.floor(timeLeft / 60);
        let seconds = timeLeft % 60;

        // Format time as MM:SS
        minutes = minutes < 10 ? '0' + minutes : minutes;
        seconds = seconds < 10 ? '0' + seconds : seconds;

        // Display the remaining time
        timerElement.text(`${minutes}:${seconds}`);

        // Decrease the time
        timeLeft--;

        // Once the time runs out, enable the Resend OTP button
        if (timeLeft < 0) {
            clearInterval(timerInterval);
            verifyButton.prop('disabled', true);  // Disable the verify button on expiry
            showMessage('Time expired! Please request a new OTP.', 'danger');
            resendButton.prop('disabled', false);  // Enable resend button when time expires
        }
    }, 1000);
}

startTimer();

// Show message (error or success)
function showMessage(message, type) {
    const messageElement = $("#message");
    messageElement.removeClass('alert-success alert-danger').addClass(`alert-${type}`).text(message).show();
}

// Clear OTP inputs
function clearOtpInputs() {
    $("#otp1").val('');
    $("#otp2").val('');
    $("#otp3").val('');
    $("#otp4").val('');
    $("#otp1").focus(); // Focus on the first input
}

// OTP form submission
$("#otpForm").on("submit", function (event) {
    event.preventDefault();

    const otpValues = [
        $("#otp1").val(),
        $("#otp2").val(),
        $("#otp3").val(),
        $("#otp4").val()
    ];

    $.ajax({
        url: '/verifyOTP',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ otp1: otpValues[0], otp2: otpValues[1], otp3: otpValues[2], otp4: otpValues[3] }),
        success: function (response) {
            if (response.success) {
                showMessage(response.message, 'success');
                setTimeout(() => {
                    window.location.href = '/';
                }, 1000);
            } else {
                showMessage(response.message, 'danger');
            }
        },
        error: function (xhr) {
            const errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'An error occurred. Please try again.';
            showMessage(errorMessage, 'danger');
        }
    });
});

// Resend OTP form submission
$("#resendOTPForm").on("submit", function (event) {
    event.preventDefault();

    $.ajax({
        url: '/resendOTP',
        method: 'POST',
        success: function (response) {
            showMessage(response.message, 'success');
            // Reset the timer and disable Resend OTP button
            timeLeft = 120;
            resendButton.prop('disabled', true);
            verifyButton.prop('disabled', false);  // Re-enable the verify button
            clearOtpInputs();  // Clear previous OTP inputs
            clearInterval(timerInterval);
            startTimer();
        },
        error: function (xhr) {
            const errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'Failed to resend OTP. Please try again.';
            showMessage(errorMessage, 'danger');
        }
    });
});

// Event listeners for input fields (move forward and backward)
$("#otp1").on("input", function () {
    moveToNext(this, 'otp2');
});
$("#otp2").on("input", function () {
    moveToNext(this, 'otp3');
});
$("#otp3").on("input", function () {
    moveToNext(this, 'otp4');
});
$("#otp4").on("input", function () {
    // No next field, handle submission or stay here
});

// Handle backspace focus
$("#otp2").on("keydown", function (e) {
    if (e.key === "Backspace") {
        moveToPrev(this, 'otp1');
    }
});
$("#otp3").on("keydown", function (e) {
    if (e.key === "Backspace") {
        moveToPrev(this, 'otp2');
    }
});
$("#otp4").on("keydown", function (e) {
    if (e.key === "Backspace") {
        moveToPrev(this, 'otp3');
    }
});
    </script>

</body>

</html>
