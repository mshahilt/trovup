<div class="main-panel w-100">
  <div class="content-wrapper">
    <div class="row">
      <div class="col-sm-12">
        <div class="home-tab">
          <div class="d-sm-flex align-items-center justify-content-between border-bottom">
            <ul class="nav nav-tabs" role="tablist">
              <li class="nav-item">
                <a class="nav-link active ps-0" id="home-tab" data-bs-toggle="tab" href="#overview" role="tab" aria-controls="overview" aria-selected="true">Overview</a>
              </li>
              <!-- More nav items here -->
            </ul>
            <div>
              <div>
                <label for="sortStats">Sort by:</label>
                <select id="sortStats" class="form-select">
                  <option value="">Select</option>
                  <option value="day">Last 1 Day</option>
                  <option value="week">Last 1 Week</option>
                  <option value="month">Last 1 Month</option>
                  <option value="custom">Custom Date</option>
                </select>
              </div>
              <div id="customDateInputs" class="d-none">
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate" class="form-control" />
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate" class="form-control" />
                <button id="applyDateRange" class="btn btn-primary">Apply</button>
              </div>
            </div>
          </div>

          <div class="tab-content tab-content-basic">
            <div class="tab-pane fade show active" id="overview" role="tabpanel" aria-labelledby="overview">
              <div class="row">
                <div class="col-sm-12">
                  <div class="statistics-details d-flex align-items-center justify-content-between">
                    <div>
                      <p class="statistics-title">Total Orders</p>
                      <h3 class="rate-percentage"><%= totalOrders %></h3>
                    </div>
                    <div>
                      <p class="statistics-title">Total Sales</p>
                      <h3 class="rate-percentage">₹<%= totalSales.toFixed(2) %></h3>
                    </div>
                    <div>
                      <p class="statistics-title">Total Discount</p>
                      <h3 class="rate-percentage">₹<%= totalDiscount.toFixed(2) %></h3>
                    </div>
                    <div class="d-none d-md-block">
                      <p class="statistics-title">Product Count</p>
                      <h3 class="rate-percentage"><%= totalProducts %></h3>
                    </div>
                    <div class="d-none d-md-block">
                      <p class="statistics-title">Users</p>
                      <h3 class="rate-percentage"><%= totalUsers %></h3>
                    </div>
                  </div>
                </div>
              </div>
              <div class="row flex-grow">
                <div class="col-12 grid-margin stretch-card">
                  <div class="card card-rounded">
                    <div class="card-body">
                      <h4 class="card-title">Order List</h4>
                      <div class="table-responsive">
                        <table class="table table-bordered">
                          <thead>
                            <tr>
                              <th>Order ID</th>
                              <th>Date</th>
                              <th>Total Amount</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% orders.forEach(order => { %>
                              <tr>
                                <td><%= order.orderId %></td>
                                <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                                <td>₹<%= order.totalAmount.toFixed(2) %></td>
                              </tr>
                            <% }) %>
                          </tbody>
                        </table>
                      </div>
                                          <!-- Modal for Date Selection -->
                    <div class="modal fade" id="dateSelectionModal" tabindex="-1" aria-labelledby="dateSelectionModalLabel" aria-hidden="true">
                      <div class="modal-dialog">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title" id="dateSelectionModalLabel">Select Date Range</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                          </div>
                          <div class="modal-body">
                            <form id="dateSelectionForm">
                              <div class="mb-3">
                                <label for="modalStartDate" class="form-label">Start Date:</label>
                                <input type="date" id="modalStartDate" class="form-control" max="<%= new Date().toISOString().split('T')[0] %>" required />
                              </div>
                              <div class="mb-3">
                                <label for="modalEndDate" class="form-label">End Date:</label>
                                <input type="date" id="modalEndDate" class="form-control" max="<%= new Date().toISOString().split('T')[0] %>" required />
                              </div>
                              <button type="submit" class="btn btn-primary">Download Report</button>
                            </form>
                          </div>
                        </div>
                      </div>
                    </div>


                        <!-- Pagination Controls -->
                        <div class="pagination-wrapper">
                          <nav aria-label="Page navigation">
                            <ul class="pagination">
                              <% if (currentPage > 1) { %>
                                <li class="page-item">
                                  <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                  </a>
                                </li>
                              <% } %>

                              <% for (let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                  <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                                </li>
                              <% } %>

                              <% if (currentPage < totalPages) { %>
                                <li class="page-item">
                                  <a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                  </a>
                                </li>
                              <% } %>
                            </ul>
                          </nav>
                        </div>
                        <a id="downloadReport" class="btn btn-primary text-white mt-3" data-bs-toggle="modal" data-bs-target="#dateSelectionModal">
                          <i class="icon-download"></i> Download Sales Report
                        </a>
                        
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- SweetAlert CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<script>
  // Wait for the DOM to be fully loaded
  document.addEventListener("DOMContentLoaded", () => {
    // Get references to the modal elements
    const downloadReportButton = document.getElementById("downloadReport");
    const dateSelectionForm = document.getElementById("dateSelectionForm");
    const startDateInput = document.getElementById("modalStartDate");
    const endDateInput = document.getElementById("modalEndDate");

    // Set the maximum date as today for both start and end date inputs
    const today = new Date().toISOString().split('T')[0];
    startDateInput.setAttribute("max", today);
    endDateInput.setAttribute("max", today);

    // Listen for form submission
    dateSelectionForm.addEventListener("submit", async (event) => {
      event.preventDefault(); // Prevent the default form submission

      // Get the selected start and end dates
      const startDate = startDateInput.value;
      const endDate = endDateInput.value;

      // Validate the date range
      if (new Date(startDate) > new Date(endDate)) {
        alert("Start date must be before the end date.");
        return;
      }

      try {
        // Send a POST request to the backend with the selected date range
        const response = await fetch('/admin/download-sales-report', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ startDate, endDate })
        });

        // Check if the response is OK
        if (!response.ok) {
          const errorData = await response.json();
          if (errorData.error === "No orders found for the selected date range.") {
            Swal.fire({
              icon: 'info',
              title: 'No Orders Found',
              text: 'There are no orders in the specified date range.',
              confirmButtonText: 'OK'
            });
            return;
          }
          throw new Error("Failed to download the report.");
        }

        // Convert the response into a Blob object
        const blob = await response.blob();
        const downloadUrl = window.URL.createObjectURL(new Blob([blob]));

        // Create a link element to trigger the file download
        const downloadLink = document.createElement('a');
        downloadLink.href = downloadUrl;
        downloadLink.download = `sales_report_${startDate}_to_${endDate}.pdf`; // Customize the filename
        document.body.appendChild(downloadLink);
        downloadLink.click();
        document.body.removeChild(downloadLink);

        // Revoke the object URL to free up memory
        window.URL.revokeObjectURL(downloadUrl);

        // Close the modal after successful download
        const modal = bootstrap.Modal.getInstance(document.getElementById("dateSelectionModal"));
        modal.hide();
      } catch (error) {
        console.error("Error downloading the report:", error);
        alert("An error occurred while downloading the report. Please try again.");
      }
    });
  });
</script>
